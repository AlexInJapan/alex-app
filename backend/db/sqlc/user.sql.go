// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
    name, email
) VALUES (
    $1, $2
)
RETURNING id, name, email
`

type CreateUserParams struct {
	Name  string `json:"name"`
	Email string `json:"email"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (Users, error) {
	row := q.db.QueryRow(ctx, createUser, arg.Name, arg.Email)
	var i Users
	err := row.Scan(&i.ID, &i.Name, &i.Email)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, name, email FROM users
WHERE email = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, email string) (Users, error) {
	row := q.db.QueryRow(ctx, getUser, email)
	var i Users
	err := row.Scan(&i.ID, &i.Name, &i.Email)
	return i, err
}
