name: Build & Push Docker images to ECR

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: alex/alex-app  # Your existing repository
  IMAGE_TAG: ${{ github.sha }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}

jobs:
  push-to-ecr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build & push frontend image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        FRONTEND_IMAGE_URI=${REGISTRY}/${ECR_REPOSITORY}:frontend-${IMAGE_TAG}

        docker build -t $FRONTEND_IMAGE_URI ./frontend
        docker push $FRONTEND_IMAGE_URI

        # Also tag as latest
        docker tag $FRONTEND_IMAGE_URI ${REGISTRY}/${ECR_REPOSITORY}:frontend-latest
        docker push ${REGISTRY}/${ECR_REPOSITORY}:frontend-latest

        echo "Frontend image pushed: $FRONTEND_IMAGE_URI"

    - name: Build & push backend image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        BACKEND_IMAGE_URI=${REGISTRY}/${ECR_REPOSITORY}:backend-${IMAGE_TAG}

        docker build -t $BACKEND_IMAGE_URI ./backend
        docker push $BACKEND_IMAGE_URI

        # Also tag as latest
        docker tag $BACKEND_IMAGE_URI ${REGISTRY}/${ECR_REPOSITORY}:backend-latest
        docker push ${REGISTRY}/${ECR_REPOSITORY}:backend-latest

        echo "Backend image pushed: $BACKEND_IMAGE_URI"